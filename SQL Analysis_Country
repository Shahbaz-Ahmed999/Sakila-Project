### Country wise Analysis 

# 1. Each country details 
select 
cn.country_id,
cn.country,
cn.revenue,
cn.total_customers as customers,
cn.rental_count ,
cat.category 
from each_country_detail cn
left join top_category_country cat 
on cn.country_id = cat.country_id
.........................................................................................................

# 2. top category in each country 
with category_of_country as (
SELECT 
cnt.country,
cnt.country_id,
cat.name AS category,
cat.category_id,
COUNT(*) AS no_of_rentals,
dense_rank() over (partition by cnt.country order by count(r.rental_id) desc) as rank_on_category
FROM rental r
LEFT JOIN customer cstm
  ON r.customer_id = cstm.customer_id
LEFT JOIN address adr
  ON cstm.address_id = adr.address_id
LEFT JOIN city ct
  ON adr.city_id = ct.city_id
LEFT JOIN country cnt
  ON ct.country_id = cnt.country_id
LEFT JOIN inventory i
  ON i.inventory_id = r.inventory_id
LEFT JOIN film f
  ON f.film_id = i.film_id
LEFT JOIN film_category fc
  ON fc.film_id = f.film_id
LEFT JOIN category cat
  ON cat.category_id = fc.category_id
 GROUP BY cnt.country_id, cat.category_id
 )
  ,top_category as (
   SELECT A1.country,
	A1.country_id,
	MAX(A1.no_of_rentals) AS no_of_rentals
	FROM category_of_country A1
	 GROUP BY A1.country_id
     )
 select 
        A2.country_id,
		A2.country,
        A1.category,
        A2.no_of_rentals
   from category_of_country A1 
   left join top_category A2
   on A2.country_id = A1.country_id AND A2.no_of_rentals = A1.no_of_rentals
   where A2.country_id is not null
   ORDER BY A2.no_of_rentals DESC
.............................................................................................................

# 3. total customers and revenue in each country 
SELECT country.country,  sum(payment.amount) as revenue,
count(customer.customer_id) as total_customers
FROM country  
left join city
on country.country_id = city.country_id
left join address
on city.city_id = address.city_id
left join customer
on address.address_id = customer.address_id
left join payment
on customer.customer_id = payment.customer_id

group by country.country
.............................................................................................................

# 4. top category in each country 
with category_of_country as (
SELECT 
cnt.country,
cnt.country_id,
cat.name AS category,
cat.category_id,
COUNT(*) AS no_of_rentals,
dense_rank() over (partition by cnt.country order by count(r.rental_id) desc) as rank_on_category
FROM rental r
LEFT JOIN customer cstm
  ON r.customer_id = cstm.customer_id
LEFT JOIN address adr
  ON cstm.address_id = adr.address_id
LEFT JOIN city ct
  ON adr.city_id = ct.city_id
LEFT JOIN country cnt
  ON ct.country_id = cnt.country_id
LEFT JOIN inventory i
  ON i.inventory_id = r.inventory_id
LEFT JOIN film f
  ON f.film_id = i.film_id
LEFT JOIN film_category fc
  ON fc.film_id = f.film_id
LEFT JOIN category cat
  ON cat.category_id = fc.category_id
 GROUP BY cnt.country_id, cat.category_id
 )
  ,top_category as (
   SELECT A1.country,
	A1.country_id,
	MAX(A1.no_of_rentals) AS no_of_rentals
	FROM category_of_country A1
	 GROUP BY A1.country_id
     )
 select 
        A2.country_id,
		A2.country,
        A1.category,
        A2.no_of_rentals
   from category_of_country A1 
   left join top_category A2
   on A2.country_id = A1.country_id AND A2.no_of_rentals = A1.no_of_rentals
   where A2.country_id is not null
   ORDER BY A2.no_of_rentals DESC
............................................................................................................................

# 4. top 5 cities overall 
WITH CityRank AS (
    SELECT
        ci.city,
        co.country,
        SUM(p.amount) AS total_revenue,
        RANK() OVER (PARTITION BY co.country ORDER BY SUM(p.amount) DESC) AS city_rank
    FROM
        city AS ci
    JOIN address ad 
    ON ci.city_id = ad.city_id
    JOIN customer cu
    ON ad.address_id = cu.address_id
    JOIN payment p
    ON cu.customer_id = p.customer_id
    JOIN country co 
    ON ci.country_id = co.country_id
    GROUP BY
        ci.city,
        co.country
)
, CountryRank AS (
    SELECT
        country,
        RANK() OVER (ORDER BY MAX(total_revenue) DESC) AS country_rank
    FROM
        CityRank
    GROUP BY
        country
)
SELECT
    cr.city,
    cr.country,
    cr.total_revenue
FROM
    CityRank cr
JOIN CountryRank cntr
ON cr.country = cntr.country
WHERE
    cntr.country_rank <= 5
    AND cr.city_rank = 1;
